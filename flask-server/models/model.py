# -*- coding: utf-8 -*-
"""Model

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PijSEPVCih8p_ICBSexFlhUaNTdQOMs8
"""

# pip install pytesseract

# !sudo apt-get install tesseract-ocr-ind

# Commented out IPython magic to ensure Python compatibility.
# %%bash
# pip install numpy scipy librosa unidecode inflect librosa
# apt-get update
# apt-get install -y libsndfile1

import pytesseract

import numpy as np
from matplotlib import pyplot as plt
import cv2 #opencv
from google.colab.patches import cv2_imshow

# img = cv2.imread("/content/sample_data/1.jpg")
img = cv2.imread("RxScan/flask-server/models/rx.jpg")
cv2_imshow(img)
cv2.waitKey()
cv2.destroyAllWindows()

gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
thresh = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)[1]

Prescription=pytesseract.image_to_string(thresh)
print(Prescription)

import torch
tacotron2 = torch.hub.load('NVIDIA/DeepLearningExamples:torchhub', 'nvidia_tacotron2', model_math='fp16')
tacotron2 = tacotron2.to('cuda')
tacotron2.eval()

text = pytesseract.image_to_string(thresh)
text

utils = torch.hub.load('NVIDIA/DeepLearningExamples:torchhub', 'nvidia_tts_utils')
sequences, lengths = utils.prepare_input_sequence([text])

import torch
from torch.nn.utils import remove_weight_norm

# Load Tacotron2
tacotron2 = torch.hub.load(
    'NVIDIA/DeepLearningExamples:torchhub',
    'nvidia_tacotron2',
    model_math='fp16'
).to('cuda').eval()

# Load WaveGlow
waveglow = torch.hub.load(
    'NVIDIA/DeepLearningExamples:torchhub',
    'nvidia_waveglow',
    model_math='fp16'
).to('cuda').eval()

# Remove weight norm (no need to import glow)
def remove_weightnorm(model):
    for m in model.modules():
        try:
            remove_weight_norm(m)
        except Exception:
            pass
    return model

waveglow = remove_weightnorm(waveglow)

with torch.no_grad():
    mel, _, _ = tacotron2.infer(sequences, lengths)
    audio = waveglow.infer(mel)
audio_numpy = audio[0].data.cpu().numpy()
rate = 22050

from scipy.io.wavfile import write
write("audio.wav", rate, audio_numpy)

from IPython.display import Audio
Audio(audio_numpy, rate=rate)



